version: "3.5"

services:
  # Base
  app_base:
    image: docker.pkg.github.com/letscode-io/timecodes-api/timecodes-api_base:latest
    build:
      context: .
      dockerfile: Dockerfile.base

  # Test
  app_test:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    depends_on:
      - db
    environment:
      - CGO_ENABLED=0
    env_file:
      - .env.test
    networks:
      - default
    volumes:
      - ./tmp:/usr/src/app/tmp
      - .:/usr/src/app

  # Dev
  app_dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - .:/usr/src/app

  # Production
  app:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"

      - traefik.http.routers.timecodes-http.rule=Host(`${APP_HOST}`)
      - "traefik.http.services.timecodes-service.loadbalancer.server.port=8080"

      - traefik.http.routers.timecodes-http.entrypoints=http
      - traefik.http.routers.timecodes-http.service=timecodes-service
      - traefik.http.routers.timecodes-http.middlewares=https-redirect

      - traefik.http.routers.timecodes-https.rule=Host(`${APP_HOST}`)
      - traefik.http.routers.timecodes-https.entrypoints=https
      - traefik.http.routers.timecodes-https.tls=true
      - traefik.http.routers.timecodes-https.tls.certresolver=le
    networks:
      - traefik-public
      - default

  # Database
  db:
    image: postgres:12-alpine
    env_file:
      - .env
    ports:
      - 9000:5432
    networks:
      - default

networks:
  traefik-public:
    external: true
